git remote add origin https://github.com/USERNAME/REPO_NAME.git

git remote add origin https://github.com/chandra-engineer/OrangeHRM.git


remote: Support for password authentication was removed on August 13, 2021.
remote: Please see https://docs.github.com/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
fatal: Authentication failed for 'https://github.com/chandra-engineer/OrangeHRM.git/'




Token : 

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



git remote set-url origin https://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@github.com/chandra-engineer/OrangeHRM


git remote set-url origin https://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@github.com/chandra-engineer/AutomationProject


To push a local Java project from your Mac to GitHub, follow these steps:

### Prerequisites
1. **Install Git**: If you haven't already, install Git on your Mac. You can check if it's installed by running `git --version` in the Terminal.
2. **GitHub Account**: Ensure you have a GitHub account. If you don’t, sign up at [GitHub](https://github.com).

### Steps to Push Your Project

1. **Open Terminal**: Launch the Terminal application on your Mac.

2. **Navigate to Your Project Directory**:
   ```bash
   cd /path/to/your/project
   ```

3. **Initialize Git**: If you haven’t initialized a Git repository yet, do so by running:
   ```bash
   git init
   ```

4. **Add Files**: Add your project files to the staging area:
   ```bash
   git add .
   ```

5. **Commit Your Changes**: Commit the added files with a message:
   ```bash
   git commit -m "Initial commit"
   ```

6. **Create a GitHub Repository**:
   - Go to [GitHub](https://github.com) and log in.
   - Click the "+" icon in the top right corner and select "New repository."
   - Give your repository a name and choose whether it should be public or private.
   - Click "Create repository."

7. **Connect Local Repository to GitHub**:
   Replace `USERNAME` with your GitHub username and `REPO_NAME` with the name of your repository.
   ```bash
   git remote add origin https://github.com/USERNAME/REPO_NAME.git
   ```

8. **Push Your Changes**: Push your local repository to GitHub:
   ```bash
   git push -u origin master
   ```

### Note
- If your GitHub repository uses `main` instead of `master`, use `main` in the push command:
  ```bash
  git push -u origin main
  ```

### Additional Tips
- Make sure your `.gitignore` file is set up to exclude any files or directories you don’t want to push (like `bin/`, `target/`, etc.).
- If you encounter any authentication issues, you may need to set up SSH keys or use a personal access token for HTTPS.

That’s it! Your Java project should now be available on GitHub.











To create a new branch, push the latest code to that branch, and then merge it into the master branch using Git on your Mac, follow these steps:

### Step 1: Open Terminal and Navigate to Your Project

1. Open the Terminal app.
2. Navigate to your project directory:
   ```bash
   cd path/to/your/repository
   ```

### Step 2: Update Your Local Repository

Make sure you're on the `master` branch and pull the latest changes:

```bash
git checkout master
git pull origin master
```

### Step 3: Create a New Branch

Create a new branch (replace `your-branch-name` with your desired branch name):

```bash
git checkout -b your-branch-name
```

### Step 4: Make Your Changes

Make the necessary changes to your code. Once done, stage and commit those changes:

```bash
git add .
git commit -m "Your commit message here"
```

### Step 5: Push Your New Branch to GitHub

Push the new branch to the remote repository:

```bash
git push origin your-branch-name
```

### Step 6: Merge Changes into the Master Branch

1. Switch back to the master branch:

   ```bash
   git checkout master
   ```

2. Pull the latest changes (in case someone else pushed changes):

   ```bash
   git pull origin master
   ```

3. Merge your new branch into the master branch:

   ```bash
   git merge your-branch-name
   ```

4. Push the updated master branch back to GitHub:

   ```bash
   git push origin master
   ```

### Summary

- You created a new branch, made changes, and pushed it to GitHub.
- Then you merged those changes back into the master branch and pushed the updated master.

If you need further clarification or help, feel free to ask!


No —— Master —.> only main 


